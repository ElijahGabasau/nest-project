import { ConfigService } from '@nestjs/config';
import { OfferID } from '../../../common/types/entity-ids.type';
import { Config } from '../../../configs/config.type';
import { CarBrandEntity } from '../../../database/entities/car-brand.entity';
import { OfferEntity } from '../../../database/entities/offer.entity';
import { IUserData } from '../../auth/models/interfaces/user-data.interface';
import { FileStorageService } from '../../file-storage/services/file-storage.service';
import { MailService } from '../../mail/services/mail.service';
import { CarBrandRepository } from '../../repository/services/car-brand.repository';
import { CarShowroomRepository } from '../../repository/services/car-showroom.repository';
import { OfferRepository } from '../../repository/services/offer.repository';
import { UserRepository } from '../../repository/services/user.repository';
import { ViewRepository } from '../../repository/services/view.repository';
import { CarBrandReqDto } from '../models/dto/req/car-brand.req.dto';
import { ListOfferQueryDto } from '../models/dto/req/list-offer-query.dto';
import { OfferBaseReqDto } from '../models/dto/req/offer-base.req.dto';
import { UpdateOfferReqDto } from '../models/dto/req/update-offer.req.dto';
import { CurrencyService } from './currency.service';
export declare class OffersService {
    private readonly offerRepository;
    private readonly currencyService;
    private readonly userRepository;
    private readonly viewRepository;
    private readonly carBrandRepository;
    private readonly mailService;
    private readonly carShowroomRepository;
    private readonly fileStorageService;
    private readonly configService;
    constructor(offerRepository: OfferRepository, currencyService: CurrencyService, userRepository: UserRepository, viewRepository: ViewRepository, carBrandRepository: CarBrandRepository, mailService: MailService, carShowroomRepository: CarShowroomRepository, fileStorageService: FileStorageService, configService: ConfigService<Config>);
    findAll(query: ListOfferQueryDto): Promise<[OfferEntity[], number]>;
    createOffer(userData: IUserData, dto: OfferBaseReqDto): Promise<OfferEntity>;
    createOfferForShowroom(userData: IUserData, dto: OfferBaseReqDto): Promise<OfferEntity>;
    uploadCarImage(userData: IUserData, offerId: OfferID, file: Express.Multer.File): Promise<OfferEntity>;
    deleteCarImage(userData: IUserData, offerId: OfferID): Promise<void>;
    private extractKeyFromUrl;
    updateMyOffer(userData: IUserData, dto: UpdateOfferReqDto, offerId: OfferID): Promise<OfferEntity>;
    getById(offerId: OfferID): Promise<OfferEntity>;
    deleteMyOffer(userData: IUserData, offerId: OfferID): Promise<void>;
    activateOfferUser(offerId: OfferID): Promise<void>;
    deactivateOfferUser(offerId: OfferID): Promise<void>;
    activateOfferShowroom(offerId: OfferID): Promise<void>;
    deactivateOfferShowroom(offerId: OfferID): Promise<void>;
    deleteByIdUserOffer(offerId: OfferID): Promise<void>;
    deleteByIdShowroomOffer(offerId: OfferID): Promise<void>;
    addCarBrand(dto: CarBrandReqDto): Promise<CarBrandEntity>;
}
